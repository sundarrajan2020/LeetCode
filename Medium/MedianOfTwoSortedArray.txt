Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.

The overall run time complexity should be O(log (m+n)).

 

Example 1:

Input: nums1 = [1,3], nums2 = [2]
Output: 2.00000
Explanation: merged array = [1,2,3] and median is 2.
Example 2:

Input: nums1 = [1,2], nums2 = [3,4]
Output: 2.50000
Explanation: merged array = [1,2,3,4] and median is (2 + 3) / 2 = 2.5.

Java:
public double findMedianOfTwoSortedArray(int[] nums1, int[] nums2) {
	int[] arr = new int[nums1.length + nums2.length];
	int i=0, j=0, k=0;

	while (i<nums1.length && j<nums2.length) {
		if (nums1[i] <= nums2[j])
			arr[k++] = nums1[i++];
		else
			arr[k++] = nums2[j++];
	}

	while (i < nums1.length)
		arr[k++] = nums1[i++];
	while (j < nums2.length)
		arr[k++] = nums2[j++];

	int size = nums1.length + nums2.length;

	if (size%2 == 0)
		return (double)(arr[size/2-1] + arr[size/2])/2;

	return (double)arr[size/2];
}